version: "3.7"

services:

  zendro_keycloak_postgres:
    container_name: pgdb_keycloak
    image: postgres
    volumes:
      - keycloak_pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      oauthkc:

  zendro_keycloak:
    container_name: zendro_keycloak
    image: quay.io/keycloak/keycloak:15.0.2
    command: ["-Djboss.http.port=8081"]
    ports:
      - 8081:8081
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: zendro_keycloak_postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    depends_on:
      - zendro_keycloak_postgres
    networks:
      oauthkc:
      zendro:
        ipv4_address: 10.5.0.11

  zendro_postgres:
    container_name: zendroStarterPack_postgres
    build:
      context: ./contexts
      dockerfile: Dockerfile.postgres
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - zendro_db_data:/var/lib/postgresql/data
    networks:
      datastores:

  zendro_graphql_server:
    container_name: zendroStarterPack_graphql-server
    depends_on:
      - zendro_postgres
      - zendro_keycloak 
    build:
      context: ./contexts
      dockerfile: Dockerfile.graphql_server
    environment:
      PORT: "3000"
      JQ_PATH: /usr/bin/jq
      NODE_JQ_SKIP_INSTALL_BINARY: "true"
      REQUIRE_SIGN_IN: "true"
    # Using ports in this way is a security concern. Please consider using e.g. a reverseproxy
    ports:
      - 3000:3000
    volumes:
      - ./graphql-server:/usr/graphql-server
      # override default default config with Starterpack config
      - ./config/data_models_storage_config.json:/usr/graphql-server/config/data_models_storage_config.json
      - ./graphiql-auth/.env.development:/usr/graphiql-auth/.env.development
      - ./graphiql-auth/.env.production:/usr/graphiql-auth/.env.production
      - ./single-page-app/.env.development:/usr/single-page-app/.env.development
      - ./single-page-app/.env.production:/usr/single-page-app/.env.production
    # Await POSTGRES role and DB creation, migrate schema, then start web
    # server:
    networks:
      zendro:
      datastores:
    command:
      - /bin/sh
      - -c
      - |
        npm install
        chmod u+x ./migrateDbAndStartServer.sh
        ./migrateDbAndStartServer.sh
        
volumes:
  zendro_db_data:
  keycloak_pg_data:

networks:
  zendro:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
  datastores:
  oauthkc: