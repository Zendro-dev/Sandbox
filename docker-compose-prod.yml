version: "3.7"

services:
  zendro_postgres:
    container_name: zendro_postgres
    network_mode: host
    build:
      context: ./contexts
      dockerfile: Dockerfile.postgres
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - zendro_db_data:/var/lib/postgresql/data

  zendro_graphql_server:
    container_name: zendro_graphql_server
    network_mode: host
    depends_on:
      - zendro_postgres
    build:
      context: ./contexts
      dockerfile: Dockerfile.graphql_server
    environment:
      PORT: "3000"
      JQ_PATH: /usr/bin/jq
      NODE_JQ_SKIP_INSTALL_BINARY: "true"
      REQUIRE_SIGN_IN: "false"
    # Using ports in this way is a security concern. Please consider using e.g. a reverseproxy
    volumes:
      - ./graphql-server:/usr/graphql-server
      # override default default config with Starterpack config
      - ./config/data_models_storage_config.json:/usr/graphql-server/config/data_models_storage_config.json
    # Await POSTGRES role and DB creation, migrate schema, then start web
    # server:
    command:
      - /bin/sh
      - -c
      - |
        npm install
        ./migrateDbAndStartServer.sh

  zendro_spa:
    container_name: zendro_spa
    network_mode: host
    # Workaround. See https://github.com/facebook/create-react-app/issues/8688
    stdin_open: true
    depends_on:
      - zendro_postgres
      - zendro_graphql_server
    build:
      context: ./contexts
      dockerfile: Dockerfile.spa
    # Using ports in this way is a security concern. Please consider using e.g. a reverseproxy
    environment:
      # Set your production environment variables here or in ./single-page-app/.env.production
      PORT: "8080"
    volumes:
      - ./single-page-app:/usr/single-page-app
      - ./data_model_definitions:/usr/data_model_definitions
    # Install dependencies and start single-page-app-server in development
    # mode.
    command:
      - /bin/sh
      - -c
      - |
        rm -rf .next
        rm -rf out
        yarn install
        yarn build
        yarn export
        yarn serve

  zendro_graphiql:
    container_name: zendro_graphiql
    network_mode: host
    # Workaround. See https://github.com/facebook/create-react-app/issues/8688
    stdin_open: true
    depends_on:
      - zendro_postgres
      - zendro_graphql_server
    build:
      context: ./contexts
      dockerfile: Dockerfile.graphiql
    # Using ports in this way is a security concern. Please consider using e.g. a reverseproxy
    environment:
      # Set your production environment variables here
      PORT: "7000"
      REACT_APP_SERVER_URL: "http://localhost:3000/graphql"
      REACT_APP_LOGIN_URL: "http://localhost:3000/login"
      REACT_APP_SERVER_METAQUERY_URL: "http://localhost:3000/meta_query"
    volumes:
      - ./graphiql-auth:/usr/graphiql-auth
    # Install dependencies and start single-page-app-server in development
    # mode.
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start

  gql_minio1:
    image: minio/minio
    container_name: minio1
    network_mode: host
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniominio
      MINIO_REGION: us-east-1
    volumes:
      - ./zendro_minio_data:/data
    command: server --console-address ":9001" /data

volumes:
  zendro_db_data:
  zendro_minio_data:
